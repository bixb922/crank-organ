# /20_note_Carl_Frei.json size=891, compressed level=9 wbits=10 compressed size=262
_f5 = const(
  b'(\xcf}\xd2;k\xc30\x10\x00\xe0=\x90\xffpx'\
  b'\x0e\xc1\x0f\xd9\x96\xe7BK\xa6v\x0f\x19TY\xd4\x02'\
  b"[',\x17\x92\x7f_\xa9>C\x06\xe7\xbc\x08N\xdf"\
  b'=t\xf8z<\\\xb3\xde\x04=[\xbfXt\xd9\t'\
  b'\xb22\x07\x87\x8b\x8175\x8f\xf0>\x1b\x0bA\xab\xd1'\
  b'\x9c\xe1\xe3\xeb\xf2\t\xde\xba\x00\xe8\xc6\xc79\xbb\x9dR'\
  b'\xb63\xe8\xed\xdd\x8c1U\xc854Y=\xa3\x1f\xd0'\
  b'\x99T\x8f\xdc\xa2\xf4\x80\x93Y\xcc\xfc\x1c\xc4_=x'\
  b'\xd5\xc7P\x9d")\xf6\xe3-\xfe_C\xfcR\xb1\xde'\
  b'\xc6khRVdU<\xbfU\x08;\xa4%"_'\
  b'\x92\xa2^I\x93\xbf&\xd4\xa8)\xe3\xa9\xb4\xc6\xc9\xef'\
  b' j\xd5T\x1c\x92\x84\x04\x83`C5\x87:B-'\
  b"\xd7.'\xd4q\xa8XQ\x9b\xf0dF\xec\x1f;\xa8"\
  b'$Tr\xa8"$8$\x08\xd5\x0c\x82m\xa6\x86A'\
  b'b\x9b\xa9\xe5\xd0V\xa9\xe3\x10\xedI\x16\x0c\xaah\xe3'\
  b'\x92[\x81\xa0\xbf@r+(i&\xf9\xfc\xba\xe3\xe1'\
  b'\xf6\x07T\xed\xd3@'\
  b'')
# /26_note_Alderman_Wright.json size=1587, compressed level=9 wbits=10 compressed size=344
_f1 = const(
  b'(\xcf\x9d\x92\xb1j\xc30\x10\x86\xf7@\xde\xe1\xd0l'\
  b'ZK\xb6O\xceX2u\x08t(t\x08\x19\\Y'\
  b"\xd4\x02\xdb2\x8e\xd3\xb4o_\xa9\xc9u\x08\xa5'*"\
  b'\xb00\xbf>N\xe8\xee\xdb\xafW{\xd1\xda\xa3\x99\xdd'\
  b'\xb48?\x8aL(\x84\xd1/\x16\x1e\xfa\xd6\xceC3'\
  b'\xde\xefl\xff\xeeFx\x99\xdd[\xb7\xc0\xd14\xbd\xbd'\
  b'\x83\xe7\xb3\x87G\xb5\x85\xd7\xd3\x11lc:8\xbb\xa5'\
  b'\x03?Z\xd8m\x9fT\x91K-\x0eY,>Z?'\
  b'\xb9\x0f\xdb\x8b\x0c\xca\xfa\x12\r\xce\xcc~\xea\x02\x1c\xc3'\
  b'K\xb6\x84\x1a~\xb0\x8b\x9dCV]3\x7f2\xdd\xd4'\
  b'\xb4!\x11\xdf\xd5 \xacx\xe0\x94\t\x99\x94\xe1S\xd7'\
  b'|\x0fb0\xd3\xe5\xe2\x0c\n\x05\xc4\xc7\x15\xafl]'\
  b'\xc8\xf3X)\x03(\x8b\xf03\xd8\xde\xb7\x9f\xe2wR'\
  b'\x12Yq\xa4"\xb2\xe6\xc8\xe2JV9G\x96D*'\
  b'\x8e\xac\x88d_\x84D\x96\x1c\xa9\x89d\xdf^\x13\xa9'\
  b'9rC\xe4\x86\xed<\r\t\xd96I\x9a\x12J\x16'\
  b'\xa51!\xdbRIsB\xb6S\x92\x06\x85l\xab$'\
  b'M\n\xf1\x06\xfd\xf19\x10\x12\xff\xe53\xeaT\x9f\xb1'\
  b'N\xf5\x197\xa9>\xebd\x9f\xb5L\xf5Y\xabT\x9f'\
  b'u\x91\xea\xb3.S}\xd6\x98\xea\xb3\xd6\xc9>\xc7M'\
  b'p&\xff\t\xa9\x14\xa8H\x81\xca\x14\xa8\xba\x81`\xbd'\
  b':\xacW_\x1e3Y\x05'\
  b'')
# /31_note_Raffin.json size=1608, compressed level=9 wbits=10 compressed size=343
_f0 = const(
  b'(\xcf\x8d\x92Ak\xc3 \x14\xc7\xef\x85~\x87\x87\xe7'\
  b'2\xa2I|\xf6\xdcS\x0fcc\xd7\xd2Cf,\x11'\
  b'\x12\r\x89e\xdb\xb7\x9fI\xe3e\x94\xf9\x02B\xfc\xfb'\
  b'C\x9f\xbe\xdfe\xbf\xbb\xb0\xd6\xccz\xb2c\xb0\xde\xb1'\
  b'\x03+98\x1f\x0c|4\xb7\x9bu0\xeb\xa67/'\
  b'\xf0\xe6\x0c\x9c\xc5\t>\xef3|\xd9\xd0\x81\x80\xd7\xd3'\
  b'\xbb(\x0b\x8e\xa0\xbd\x0b\x93\xef{3\xcd\xeczXv'\
  b't\xc6\x8f\xf6\xdb\xf4\xec\x00\x95zD\x83\xd5\x93\x1f;'\
  b'\xef\xcc\x12>\xb2\xd0\xe8\xce\x0f&\x98)f\xf5\x96\xf9'\
  b'\xbb\xee\xc6\xa6\x8d\t\xdbv\x0bf\x18\xfd:Oc\xc9'\
  b'\x97\x15+t\x9cs\x8cc=\x06\x00.\xc0\x06=\xae'\
  b'\x85\xc5\xa5R\xc0\x96\xaf\xdfRFkc^<v\x82'\
  b'J\xc6\x9f\xc1\xf4\xbe\xfda\xcfI\x9eH\x95#\xc5F'\
  b'\xd6<G\x96\x89,sd\x95\xc8l\x9du"\xb3u'\
  b'\xca\x8d\x94E\x8e\xc4Dfo\xa4\x12)r\xe41\x91'\
  b'\xd9\xbb\xf3\xd4$Ye\xd1\xd4%Yg\xd1\xd4&\x89'\
  b"Y4\xf5If\xdf\x94\xa7F\xc9c\x16M\x9d\xc2'"\
  b'\xef\xff\xc7\xde\xf2\x7f{QP\xed\xc5\x92j/VT'\
  b'{\xb1\xa6\xda\x8bd{\x11\xa9\xf6\xa2\xa2\xda\x8bG\xaa'\
  b'\xbd\xaa\xa0\xda\xab8\xd9^%\xc8\xf6\xaa\x8al\xaf\xaa'\
  b'\xc9\xf6*I\xb6W!\xd5\xde\x15g\x11\x82\xfd\xee\xba'\
  b'\xdf\xfd\x02\x94\xc4c\x8f'\
  b'')
# /35_note_custom.json size=1639, compressed level=9 wbits=10 compressed size=363
_f2 = const(
  b'(\xcf\x95\x92\xc1\x8e\x83 \x10\x86\xef\xfb\x14\xc4s\x0f'\
  b'\x822\xe0\xb3\x98\x1e,\x92\x96\xa4\n\x11\x9bt\xdf~'\
  b'\xa1\x8c\x8d\xdbf\xa7Y\x13\xa3\x19>\x86\xf1\xf3\xef\xfb'\
  b'j\xb4\xd1,.\xac\xce\xcf\xd5\x81U\x8dd\xb3_-'\
  b'3\xb7\xb8\xfa\x89E3\\mu<\xb0\xaf\xbe\x9a\xad'\
  b'\x0f\xeen\xaf\tku)M\xce,>\\\xfclS'\
  b"\x91\xd7\xa5\xb8\x0e\xe6\xe2'\xbb\xda%7\xc4\xcd\xab\xbf"\
  b'\x99K\x18\xc6T\xea\xb0b\xa7\xe0\x1f\xc4v\x1f\x0f\xa9'\
  b'\xbc\xd8\xb3\x8b\xdb\xde\x0f\xd5sp>\xbf\xb1t\xe5a'\
  b'F\x97\xc7h\n\xa3DzN\xf6\xea\xc7\xefw\xa6E'\
  b'\x86\xef\x19\xf6\x02\xa9\xdf\xc3\xbd.\xeb\xb2$s\x8f\xd3'\
  b'\x10cA\xfa\xca\t\x93\x97S\x99\x8b\xdd.\x13DS'\
  b's\x95\x96\x9agy\xd7\xae.\xdd\xb4|\x9fh\x7f('\
  b"R\rI\t\xfc:\x9a\xda<\xd5$\x85\xa64')"\
  b'\x89\xbd\x14I\x01R\x1dI\xa1vE\x9b@\xfb\x9a>'\
  b'\xb1C\nh\xab(_\xb54\x86\xf6\xd5\x87n\xa8_'\
  b'\x7f\xe8\x86\xfe5\xed\xff\x19UMc\xf8\x07\xb4x\xc1'\
  b'\x9eyL\x00\x87\x7f\xe7\x11\xf2\x94\x831~\nD\x1e'\
  b'\xa1%)\x14"\xf3\'\x9c\x86\x18\x894J \x18T'\
  b'Q\xee\xbfS(\xe9\x991\x85-u\x12f\xb0\xa5&'\
  b'\xc6\x04\x82 O\xc3\x04\x02\xa7=n\xba5\x8dm\xbe'\
  b'k\x1aC\xe1 i\x0c\x9dCGc\xa8\x1d\x14\x8d\xa1'\
  b'}\x80\x1d\xf6\x80\x8e?\x9b\xbev9'\
  b'')
# /40_note_servo.json size=2063, compressed level=9 wbits=10 compressed size=450
_f4 = const(
  b'(\xcf\x8d\x92\xbbn\xdc0\x10E{\x7f\xc5@\xf5\x16'\
  b'\xa4$\x92\xc3t\x81\x8b E\x90\x85\x1b\x17\x0b\x17\x8a'\
  b"Dd\x05\xacDb%\x07\xce\xdf{\xf4\x18'\xfb\x90"\
  b'\xc9B\xaf;\x87\x1cj\xee=<\x1c\xb2\xc6\r\xf5\xb9'\
  b'\rc\xeb\xfbl\x07Y)\xa0\xf7\xa3\x83\xa7G\x18\xdc'\
  b'\xf9\x8f\xff\x02\x08\xdf\xf6\xdf\x7f\xc2\xfe\xf9\x07T}\x03'\
  b'\x90\xbfI\r\xfb\xc7\xafV\xa3\xca^v\xb4E\xef|'\
  b'h\xdf\xdc\x89\xd6\x978+][\x9f}8\xfa\xde\x91'\
  b'\xa6gi\xac\xea\xa3\xef\xdc\xe8\xce$-\xd4\xe8_\xeb'\
  b'c\xa8\x1a\x12\xcc"\xb8.x\xfa\xb2;\x90\x82.I'\
  b'*\xc9\xbfC\xeb\xe7\xc3PI\t!H\x058d\xb3'\
  b'\x14^O\xc3\xd4DR\x81\xeef\xadN\xf5\xaemZ'\
  b'\xaa\x80\xa6\xdf\x9aV\x16\xf4\xfcU\rCvC\x98\x95'\
  b'\xc0-B\xaa\x85\xd0b\x93X\xbb\xe8\x9c\x9eU]\xfb'\
  b'.\xdc2k\x1f]|\xc2\xe0\xca\x94\x17\xcc\xd5\x10\xd4'\
  b'\xe7CP\xb7C\xe0m\xd5v\xebi\xec3c\xaeZ'\
  b'\xb7y=5%w\x97%\x07\xc8B]\xcd\xfe/\x07'\
  b'\xfd0\x05\xb6\x8e\x84B\x00\x13\xff\xf7\x14KK\xd0\xd3'\
  b'\xf9:w\xf2\xcd\xdf\xec.(\x19\xb4\x110_A#'\
  b'"`\xc1\xa0\x8c\x80%\x83y\x04T\x0c\x16\x11P3'\
  b'XF@\xc3\xa0\x8a\x80\xc8\xa0\x8e\x80\x96A\x13\x1b8'\
  b'[c\xa2\xd6\xb07&\xe6\x8dds0f\x8edw'\
  b'0\xe6\x8ed{0f\x8fd\x7f\xf0\x8e?\x97\x99V'\
  b')\x99\xd6\x91Lc\x99\x98iT\x89\x99F\x9d\x98i'\
  b'4\x89\x99FL\xcc4\xda\xc4L[\x91\x98i{\xcf'\
  b"\xd9\xebI\x8by\xd2fc\xd2\x9cz\x9b'\xa6\xde\x16"\
  b'\xa9\xa9\xb7ej\xea\xadJM\xbd\xd5\xa9\xa9\xb7&5'\
  b'\xf5\x16SSo/\x1c\xfc\x00\x1f\xfe\xbd\xbe\x03\xbe\x0b'\
  b'\xd6,'\
  b'')
# /48_note_custom.json size=3219, compressed level=9 wbits=10 compressed size=638
_f8 = const(
  b'(\xcf\x95\x92M\x8f\x9b0\x10\x86\xef\xfd\x15\x88s\x0e'\
  b'|\x18{|\xed\xaa\xc7\xaa{\x8f\xf6@\x8c\xbbA\x82'\
  b'\x18\x01\xa9\xba\xff\xbevx\xb3!q\x8c\xbb\x91\xa2\x88'\
  b'\xc9\xe3\x87\xf1\xbc\xb3\xdf\xa7\x8d\x9e\xd4\xd8\x0eskN'\
  b"\xe9.I\x19%'3\xebD\x9d\xa7\xd9\xf4\xc9\xa4\xea"\
  b'N\xa7o\xbbo\xc9>=i3\xb4\x7fug1F'\
  b'K\xa9o\xd5h\x86\xa39i[\xcc\xb3\xa58\xd7\xea'\
  b'hz=\xeb\xd1\x15wI\x81\xb29\xab\xe3P7\xb6'\
  b'(Q\xd1\xfd`\x9c-\xdb%%\xd9_\xb1\xd4G\xfd'\
  b'\xdeN\xcbqf\xcf\xa7\xdf\xcdyl.\xed\xfd\xae\xbb'\
  b'I{P\xe1\xa0_j\xae\xff\xe8 SJ\xcb\xbc\xb6'\
  b'J\x99\xce\x04!VX\xe8Ew\xda>\xdfC\xefC'\
  b'k.cp\x1fw\xef\xa6u\x97+-o\x7f\x85;'\
  b'\xd7\xeb\xce4\x1fn\x86O@\x060\x8f\x81b\x01o'\
  b'_\x1f\xa1\xe5\xaf\xca\xb9\x0e\xf54}b\xfb\xb4-\x94'\
  b'#\xec?9\xa6\xde\xab\xa1(\xb3\\\xb8\x11\x14\x9e+'\
  b'[TT\xc5\xda\x02WF\xb8\x02\xd7\x8cq\xd7\xb9e'\
  b'\x11\x0ec\xa3\xd8\xd8*\xf8D\x84\xe3\xe0d\x84C\n'\
  b'"6\x17DA\xb7\xf7\xee\x92Q\x0f]\xadt\x93\x1c'\
  b'>\x92aY\xb8\xe4\xc7\x81;\xc1\xcf\x0bry\xf2T'\
  b'\x12*\x1e\x8b\x02\x99\t\x16\x03\x11\x9a\x88\x1a\x91\x1aE'\
  b'\x8d\x88\x8d\xb2\xff]w\x8a\x81\x08\x8e\n\x1f\xfc\xdcf'\
  b'\xcb\xe4\xfc\x0b\xdb\xcc]\x9b\xb5\x1d|?ln3g'\
  b'\x11\x0es\xa9\xdc-\x0e\xf54m\xeer\xc57)L'\
  b'\xe4\xf6\r\xedpUnz\xb0\xc1l\xfbm\xd8_\xb6'\
  b'\xdd9\xb6\x97\x17\x919`5y\x1e\x9b\xeb5\x00\x8a'\
  b'\x81\xd7\x04\xb2\x18\x88\x08x\x15\x03\x91\x02\x971\x10A'\
  b'p\x11\x03\x91\x07\xe7>x]M\xeb\xaa\xbe\xb0\x98\xd2'\
  b'\xa9\x86\xd6\xba:c\xaf\xf6\xfc\xbd`\x89y\xec\xeb\xf2'\
  b'\x14\xdcg\x92\xab#\xdc\x16\x9e^ka\x85\xf0\xd8\xa0'\
  b'\x1e\x19HZwT>\xef\x1e,q\x8f\r\xea\x91\x1c'\
  b'\xad;\x12\x81\xee\xc1\x8a\xcac\x83z\xe4M\xeb\xee)'\
  b'\xa0\x07+\xb8\xc7\x06\xf5\xd8\x12\x99\xad\x8e\xc8\x80\x1e\xac'\
  b' \x8f\r\xea9\xf4w\xdb\x90?\x9f=X*<6'\
  b'\xa8\x17\xd0\xdf\x1d\xc9\x9e\xeb\xc1R\xe6\xb1A=A\xbf'\
  b'\x8e\xab\x0c\x0c\x07,\x95\x1e\x1b\xd4\xcb\xe5\xc8\xed\xebo'\
  b'{\x86\x0e\xe4\xba\xe9m\xf6n\x11\xb7\xc7\x97\xe7\xd0\xaf'\
  b'\x9bf\x01=X\xca\x1f\xd9\xb0\xbe\x80~\xddQ\x11\xd0'\
  b'\x83\xa5\xea\x91\r\xebK\xe8\xd7\x1dU\x01=X!\x1f'\
  b'\xd9\xb0\x9e\xc5\xe3\xa9<\xe4\xed\x1f\xae\x12\xea\x8e'\
  b'')
# /64_note_midi_over_serial.json size=2206, compressed level=9 wbits=10 compressed size=437
_f3 = const(
  b'(\xcfu\xd2Mk\x021\x10\xc6\xf1{?E\xf0\xbc'\
  b'\x87\x9dMf\x92\xdc{\xe9\xa1\x9f\xa0\xf4 \x1ap\xa1'\
  b'\x9ae\xb5\xa5\x1f\xbf\xf1\xe5\t\x85>\x15\x04\x99\xff\xe8'\
  b'\xca\x8fy{z\xdb\xec\xcby\xb7\xce\xcbe\xae\xa7\xcd'\
  b'\xe06\x16\xdc\xa9^\xca\xd9\xbd\xbe<\xbf\xb8\xfaUV'\
  b'w.\xeb\xbc\xfd\xd8\xbc\x0fm\xfbT\xea2\x7f\x97\x8f'\
  b'\xb6\x1a\xd2mr\x9cwk]\x0e\xf5T\xae_\xbfo'\
  b']\xb6\xbbC=\x96KY\x7f\xcd\xea\xe7\xee\xb0l\xf7'\
  b'm\xa2\xf7A9.\xf5\xd6\xf1n\xe36\x7f<np'\
  b"N\x06'\xe3\xe0F\xd7\x82k\xaf\xeb\xc3\xf6s+\xe3"\
  b'\xfd\x1b\xed/\\?\xfc\xc9\x82\x9ci\x9e\x1eYG\x9a'\
  b"=\xb2\xd0\x1c\x90'\x9a\x15\xd9\xd3l\xc8\x81\xe6\x88\xac"\
  b"4'd\xa39#G\xce\x026\xfd\x87\rn\xca\xdd"\
  b'\x04p\xc6\xe1\x04r\xc6\xe5\x04t\xc6\xe9\x04v\xc6\xed'\
  b'\x04x\xc6\xf1\x04z\xc6\xf5\x04|\xc6\xf9\x04~\xc6\xfd'\
  b'&\xf8\x19\xf7\x9b\xe0g\xff\xdc\x1d\xfc"\xf7\x9b\xe0\x17'\
  b'\xb9\xdf\x04\xbf\xc8\xfd&\xf8\xc5\xdb\x0f\xfd\xc9\xe0\x8b\x81'\
  b'f\xe8E\xa5\x19x\xd1h\x86]\x8c,{\xd0\xc5D'\
  b'3\xe4b\xa6\x19pi\xa4\x19nIh\x06[\x9ah'\
  b'\x86Z\xa2j\x1ej\x89\xaay\xa8%\xaa\xe6\xa1\x96\xa8'\
  b'\x9a\x87Z\xa2j\x01j\x89\x1f\\\x00[\xe2\x07\x17\xe0'\
  b'\x96\xf9\xc1\x05\xc0e~p\x01r\x99\x1f\\\x00]\xf6'\
  b'\xbc\xc3.\x07\xde\x81\x97\x95w\xe8e\xe3\x1d|9\xd2'\
  b'\xae\xf0\xcb\xdcO\xe1\x97\xb9\x9f\xc2OF\x0e\xa8\xbe/'\
  b'pA\r}\x81\x13\xaa\xf6\x05n\xa8\xd6\x178\xa2\xc6'\
  b'\xbe\xc0\x155\xf5\x05\xce\xa8\xb9/pG\x1b\xfb\x02\x87'\
  b'4\xe9\x0b\\\xd2\xba\xa4pI\xeb\x92\xf2\x90|z\xff'\
  b'\x010W\xb6z'\
  b'')
# /drumdef.json size=932, compressed level=9 wbits=10 compressed size=334
_f9 = const(
  b'(\xcf\x8d\x91Mk\x83@\x10\x86\xef\xf9\x15\x83\xa7\x16'\
  b'\xb6\xe0\xd7\xac\xa6\xb0\x974\x81\x06\xda[o%\x84\xd5'\
  b',\x89\xe0*\xec\xae\rm\xc8\x7f\xaf\xbb\t\xd5\x165'\
  b'\xf5\xa4\xbe\xcf\xbc\xcc\xc3\x9cf\xd0>^^K)*'\
  b'\x13x\x8f\xe0E\x08\x19\xd7\x1av\xaa\x91pwlT'\
  b'Y\x98/\xa1\xee=\xf2\x8b\r-\x1b#\x94\xf5\x11L'\
  b'-\xff\xa4\x91K\x13\x9b>\xc8b7@\xc4\x8eH\xe1'\
  b'P\xec\x0f#\x08:d\x0e\xb9\xe2\xfa\x00\xf9\xa7\xccx'\
  b'9\xb1\x11\xb58\xfa\xa0+\xae\xc4\xad\xf5\x13\x0b\xa7\x08'\
  b'9\xd7\x86W\xc2\xe8\t6u\xc5\xed\x1e%\xff\x10\xfa'\
  b'\x1a^\x88\xd8\xf6\x9c\xdc\xbb\xfb\xae\xb8\x14\x96~\xb9z'\
  b'\xbf\xd5\x12^\xd7\xcb5\x8b\x13\xb6\x08\xd9\x82\x100M'\
  b'%\xac-\xac2\x8f@7\xbak\x147E]\xb5\xe3'\
  b'\x01\x92\xee\x7f[Sl\xcbB\x9b6x\xa7\x01\xa1>'\
  b'\xc1\x88 %4\xdc\xf4\xe7\xb5Qu\xb5\xdf\xf6jB'\
  b'\x7f \xb7u\xdaVa\xba\xf9\t\xe1|5F\x7f\xd8'\
  b"\xe7\xb9\xbdR'\x83>[Fl\xd9sYL\xb9\xc0"\
  b'\x98LD.>4$4\xbe-3\xeeB\xb1\xe7\xd2'\
  b'\xd3IpX\xe7\xc9]\xf2"\x93 [e\xc8\xb6\xe2'\
  b'_\xa7I\xc7m\xe6\x84&\x84"\xa1\xedi\xd2\x1b6'\
  b'\xc1\x94M\xe2w6\xe7\xd9\xf9\x1b.\xcb\xf0\x8a'\
  b'')
# /pinout.txt size=27
_f7 = const(
  b'data/20_note_Car'\
  b'l_Frei.json'\
  b'')
# /tunelib.json size=3
_f6 = const(
  b'{}\n'\
  b'')
direntries = const(( ( '/20_note_Carl_Frei.json',  ( _f5, True, 891 ) ),
 ( '/26_note_Alderman_Wright.json',  ( _f1, True, 1587 ) ),
 ( '/31_note_Raffin.json',  ( _f0, True, 1608 ) ),
 ( '/35_note_custom.json',  ( _f2, True, 1639 ) ),
 ( '/40_note_servo.json',  ( _f4, True, 2063 ) ),
 ( '/48_note_custom.json',  ( _f8, True, 3219 ) ),
 ( '/64_note_midi_over_serial.json',  ( _f3, True, 2206 ) ),
 ( '/drumdef.json',  ( _f9, True, 932 ) ),
 ( '/pinout.txt',  ( _f7, False, 27 ) ),
 ( '/tunelib.json',  ( _f6, False, 3 ) ),
))

version = const(2)
date_frozen = const( '2025/06/25 23:50:57' )

sum_size = const(14175)
files_folders = const(10)
import os
import errno
import sys
class _VerbosePrint:
 def __init__( self, module_name, function, silent ):
  self.silent = silent
  self.prefix = f"{module_name}.{function}"
 def print( self, *args ):
  if not self.silent:
   print( self.prefix, *args )
def _file_exists( filename ):
 try:
  open( filename ).close()
  return True
 except:
  return False
def _extract_file( dir_entry, destination ):
 from io import BytesIO
 data = dir_entry[0]
 if not data:
  return
 buffer = bytearray(256)
 stream = BytesIO( data )
 if dir_entry[1]:
  from deflate import DeflateIO, AUTO
  stream = DeflateIO( stream, AUTO, 0, True )
 with open( destination, "wb" ) as outfile:
  while True:
   n = stream.readinto( buffer )
   if n == 0:
    break
   outfile.write( memoryview( buffer )[0:n] )
 stream.close()
def _create_folder( folder, vp ):   
 path = ""
 for p in folder.split("/"):
  path += "/" + p
  path = path.replace("//", "/" )
  try:
   os.mkdir( path )
   vp.print( f"folder {path} created." )
  except Exception as e:
   if type(e) is not OSError or e.errno != errno.EEXIST:
    vp.print( f"folder {path} not created: ", e )
def _extract_all( direntries, target, overwrite, vp ):
 _create_folder( target, vp )
 for filename, dir_entry in direntries:
  dest = (target + filename).replace("//", "/")
  if dir_entry:
   try:
    if overwrite == "never" and _file_exists( dest ):
     vp.print( f"file {dest} exists, not extracted." )
    else:
     vp.print(  f"extracting file {dest}." )
     _extract_file( dir_entry, dest )
   except Exception as e:
    vp.print( f"file {dest} not copied: {e}." )
    raise
  else:
   _create_folder( dest, vp )
def extract_fs( module_name, target, overwrite, silent ):
 module = __import__( module_name )
 if module_name != "__main__":
  del sys.modules[ module_name ]
 vp = _VerbosePrint( module_name, "extract", silent )
 vp.print( f"extracting files to {target}." )
 _extract_all( direntries, target, overwrite, vp )
 return 
extract_fs( __name__, '/data', 'always', False )